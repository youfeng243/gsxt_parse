问题:
1. 自动解析机制
2. 工商schema

一. 数据类型分析
    1. 常规html解析
    (1). 字典解析  例如: 基本信息
    (2). 单列表解析 例如: 变更信息
    (3). 复合列表解析 例如: 年报下面的股东信息
    (4). 嵌套列表解析 例如: 出资信息
       <1>. 难点: 层级关联 js跳转目前没有办法关联
    (5). js内嵌数据解析
       <1>. 正则配合回调方式用户自定义解析
    (6). 双列表解析, 第一个列表只存储列表标题信息, 第二个列表存储列头和数据
    (7). 没有任何title列表解析, 例如: 黑龙江所有列表中都没有存储标题信息, 只能通过selector进行定位

    2. json数据格式解析  (后期考虑, 优先考虑html)
    (1). 拓扑路径信息
    (2). 单个json节点数据解析
    (3). 多个json节点数据解析

二. 接口需求分析
    1. 类似PyQuery 能够根据title或者 class 或者 id 解析出列表.
    2. 支持一次性解析多个属性, 比如同时提取出 基本信息 与 变更信息
    3. 解析多页列表且进行合并

三. 逻辑判断条件描述
    1. 标题栏一定不包含 0-9 . * 等特殊符号
    2. colspan 可以判断出有一行数据有多少项
    3. MULTI_VERTICAL_LAYOUT 统一返回单列表, 兼容td th组合 与td单行情况
    4. selector传入需判断是否当前selector指向为table, 否则再次通过find('table')方式找出table
    5. 根据selector找出的table判断是一个还是多个, 如果是一个 则默认包含列表头和数据项,不继续进行搜索
       如果是多个, 判断第一个table是否已经包含了列表头和数据项, 包含则只解析第一个table, 如果只包含列表头再往后搜索数据项
       如果再次搜到列表头table 则默认当前selector解析出没有数据, 否则解析当前搜索到的table当做数据项 然后结束搜索


四. 问题记录
    1. 黑龙江 国网黑龙江招标有限公司 出资信息详情页a标签不是链接,而是js函数, 如何关联映射?
    2. 嵌套表格目前不支持, 当前处理方式需要判断是否为嵌套表格, 如果是嵌套表格 则不进行处理

五. 难点记录
    1. 包含大标题的table 需要识别大标题 比如: 股东信息, 变更信息等这种大标题
    2. 标题栏识别, 一般标题栏会使用th标签, 但也并不是所有的table标题栏都会使用th标签
    3. 复合table需要模拟填充表头与数据, 按占位数进行填充

六. 列表类型总结
    1. 单列表 包含列表名称
    2. 单列表不包含列表名称
    3. 双列表, 第一个列表包含表头信息以及列表名称 第二个列表包含数据项信息
    4. 双列表, 第一个列表包含表头信息 第二个列表包含数据项信息
    5. 复合列表 包含列表名称
    6. 复合列表 不包含列表名称
    7. 纵向表头列表(暂不做,后期考虑)
    8. 多行表头列表(暂不做,后期考虑)

七. 解析流程
    1. 先定位列表中列表行节点位置, 根据tr标签进行定位
    2. 定位列表名称项, 部分表格会吧列表名称集成到列表中,且一般排在第一位, 判断依据如下:
        <1>. 列表名称在列表最上面一栏
        <2>. 最上面一栏有且只有一个td 或者th 或者其他包含text文本的标签元素
        <3>. 列表名称一般会完整匹配传入参数title, 如果完全匹配 则是列表名称
    3. 确定列表长和宽, 遍历列表提取rowspan 以及 colspan属性进行计算得到空列表
    4. 按行从上至下提取行内元素信息, 根据rowspan与colspan 计算坐标 进行二维填充

八. 解析模块划分
    1. table分割模块, 需要根据selector或者title进行html片段分割, 精准定位table位置以及个数. (难点, 尚有不确定性)
    2. 列表解析模块, 针对列表片段进行解析, 参数为table对象, 需要对表名称进行剔除
    3. 多页列表合并模块, 根据每一页解析出的列表信息进行合并追加合成一个完整的列表数据返回给用户层, 只针对翻页列表进行合并,
       MULTI_VERTICAL_LAYOUT不进行合并.

九. 数据返回schema
    1. 二维数组

十. 流程图链接
    https://www.processon.com/view/link/58dbac8ee4b03e9f05ba54eb